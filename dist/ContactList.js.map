{"version":3,"sources":["../src/ContactList.js"],"names":["fs","require","util","writeFile","promisify","readFile","Contact","obj","name","age","phone","console","log","_name","length","_phone","number","temp","toString","ContactList","filename","list","contact","push","JSON","stringify","readFilePromise","then","parse","fileString","map","contactObj","Promise","resolve","exports"],"mappings":";;;;;;;;AAAA,IAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEA,IAAME,YAAYD,KAAKE,SAAL,CAAeJ,GAAGG,SAAlB,CAAlB;AACA,IAAME,WAAWH,KAAKE,SAAL,CAAeJ,GAAGK,QAAlB,CAAjB;;IAEMC,O;AACL,mBAAYC,GAAZ,EAAiB;AAAA;;AAChB,QAAG,CAACA,GAAJ,EACC,MAAM,wCAAN;;AAED,SAAKC,IAAL,GAAYD,IAAIC,IAAhB;AACA,SAAKC,GAAL,GAAWF,IAAIE,GAAf;AACA,SAAKC,KAAL,GAAaH,IAAIG,KAAjB;AACA;;;;2BAwCO;AACN,UAAI,KAAKA,KAAT,EACCC,QAAQC,GAAR,CAAY,aAAa,KAAKJ,IAAlB,GAAyB,MAAzB,GAAkC,KAAKE,KAAnD,EADD,KAGCC,QAAQC,GAAR,CAAY,KAAKJ,IAAL,GAAY,6BAAxB;AAED;;;+BACU;AACVG,cAAQC,GAAR,CAAY,aAAa,KAAKJ,IAAlB,GAAyB,WAAzB,IAAwC,KAAKC,GAAL,GAAS,CAAjD,IAAsD,cAAlE;AACA;;;;AAhDD;;AAEA;AACA;wBACW;AACV,aAAO,KAAKI,KAAZ;AACA,K;sBAEQL,I,EAAK;AACZ,UAAI,CAACA,IAAL,EAAU;AACX,cAAM,wCAAN;AACE;AACD,UAAI,OAAOA,IAAP,KAAgB,QAApB,EAA6B;AAC3B,cAAM,yBAAN;AACD;AACD,UAAIA,KAAKM,MAAL,IAAe,CAAnB,EAAqB;AACnB,cAAM,4CAAN;AACD;AACF,WAAKD,KAAL,GAAaL,IAAb;AACA;;;wBAEU;AACV,aAAO,KAAKO,MAAZ;AACA,K;sBAESC,M,EAAO;AACf,UAAI,OAAOA,MAAP,KAAkB,QAAlB,IAA8B,OAAOA,MAAP,KAAkB,QAApD,EAA6D;AAC3DL,gBAAQC,GAAR,CAAY,mBAAkBI,MAAlB,yCAAkBA,MAAlB,EAAZ;AACA,cAAM,2CAAN;AACD;;AAED,UAAIC,OAAOD,OAAOE,QAAP,EAAX;;AAEA,UAAID,KAAKH,MAAL,KAAgB,CAApB,EAAsB;AACpB,cAAM,yCAAN;AACD;AACD,WAAKC,MAAL,GAAcE,IAAd;AACD;;;;;;AAYF;;IAEKE,W;AACL,uBAAYC,QAAZ,EAAqB;AAAA;;AACpB,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKD,QAAL,GAAgBA,QAAhB;AACA;;;;+BAEUE,O,EAAQ;AAClB,UAAGA,mBAAmBhB,OAAtB,EAA8B;AAC7B,aAAKe,IAAL,CAAUE,IAAV,CAAeD,OAAf;AACA;AACD;;;2BAEK;AACL,aAAOnB,UAAU,KAAKiB,QAAf,EAAyBI,KAAKC,SAAL,CAAe,KAAKJ,IAApB,CAAzB,EAAoD,MAApD,CAAP;AACA;;;2BAEK;AAAA;;AACL,UAAMK,kBAAkBrB,SAAS,KAAKe,QAAd,EAAwB,MAAxB,CAAxB;;AAEA,aAAOM,gBACNC,IADM,CACD,sBAAc;AACnB,cAAKN,IAAL,GAAYG,KAAKI,KAAL,CAAWC,UAAX,EACXC,GADW,CACP;AAAA,iBAAc,IAAIxB,OAAJ,CAAYyB,UAAZ,CAAd;AAAA,SADO,CAAZ;;AAGA,eAAOC,QAAQC,OAAR,CAAgB,IAAhB,CAAP;AACA,OANM,CAAP;AAOA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;AACD;;AAEDC,QAAQ5B,OAAR,GAAkBA,OAAlB;AACA4B,QAAQf,WAAR,GAAsBA,WAAtB","file":"ContactList.js","sourcesContent":["const fs = require(\"fs\");\r\nconst util = require(\"util\");\r\n\r\nconst writeFile = util.promisify(fs.writeFile);\r\nconst readFile = util.promisify(fs.readFile);\r\n\r\nclass Contact {\r\n\tconstructor(obj) {\r\n\t\tif(!obj)\r\n\t\t\tthrow \"Need object to initialize values from.\";\r\n\r\n\t\tthis.name = obj.name;\r\n\t\tthis.age = obj.age;\r\n\t\tthis.phone = obj.phone;\r\n\t};\r\n  // addPhone(number) {\r\n\r\n  //     return this.phone = number;\r\n  // }\r\n  get name() {\r\n  \treturn this._name;\r\n  }\r\n\r\n  set name(name){\r\n    if (!name){\r\n\t\t\tthrow \"Name is needed to create a new person.\";\r\n    }\r\n    if (typeof name !== \"string\"){\r\n      throw \"Name needs to be string\";\r\n    }\r\n    if (name.length <= 3){\r\n      throw \"Name needs to be atleast 4 characters long\"\r\n    }\r\n  \tthis._name = name;\r\n  }\r\n\r\n  get phone(){\r\n  \treturn this._phone;\r\n  }\r\n\r\n  set phone(number){\r\n    if (typeof number !== 'string' && typeof number !== 'number'){\r\n      console.log(\"inde: \" + typeof number);\r\n      throw \"Phone number needs to be string or number\";\r\n    }\r\n    \r\n    let temp = number.toString();\r\n    \r\n    if (temp.length !== 8){\r\n      throw \"Phone number needs to be 8 digits long.\"\r\n    }\r\n    this._phone = temp;\r\n  }\r\n\r\n  call() {\r\n  \tif (this.phone)\r\n  \t\tconsole.log(\"Calling \" + this.name + \" at \" + this.phone);\r\n  \telse\r\n  \t\tconsole.log(this.name + \" has no phone number saved.\");\r\n\r\n  }\r\n  birthday() {\r\n  \tconsole.log(\"Wishing \" + this.name + \" a happy \" + (this.age+1) + \"th birthday!\");\r\n  }\r\n};\r\n\r\nclass ContactList {\r\n\tconstructor(filename){\r\n\t\tthis.list = [];\r\n\t\tthis.filename = filename;\r\n\t}\r\n\r\n\taddContact(contact){\r\n\t\tif(contact instanceof Contact){\r\n\t\t\tthis.list.push(contact);\r\n\t\t}\r\n\t}\r\n\r\n\tsave(){\r\n\t\treturn writeFile(this.filename, JSON.stringify(this.list), \"utf8\");\r\n\t}\r\n\r\n\tload(){\r\n\t\tconst readFilePromise = readFile(this.filename, \"utf8\");\r\n\r\n\t\treturn readFilePromise\r\n\t\t.then(fileString => {\r\n\t\t\tthis.list = JSON.parse(fileString)\r\n\t\t\t.map(contactObj => new Contact(contactObj));\r\n\r\n\t\t\treturn Promise.resolve(null);\r\n\t\t});\r\n\t\t// return new Promise((resolve, reject) => {\r\n\t\t// \treadFilePromise\r\n\t\t// \t.then(fileString => {\r\n\t\t// \t\tthis.list = JSON.parse(fileString)\r\n\t\t// \t\t.map(contactObj => new Contact(contactObj));\r\n\r\n\t\t// \t\tresolve(null);\r\n\t\t// \t});\r\n\t\t// });\r\n\t}\r\n};\r\n\r\nexports.Contact = Contact;\r\nexports.ContactList = ContactList;"]}